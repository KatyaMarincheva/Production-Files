using System;
using System.Threading;

class TimerEngine
{
    static void Main()
    {
        int minutes = DateTime.Now.Minute;

        int waitPeriod = minutes <= 40 ? (40 - minutes) : (70 - minutes);
        // Create an AutoResetEvent to signal the timeout threshold in the
        // timer callback has been reached.
        var autoEvent = new AutoResetEvent(false);

        var statusChecker = new StatusChecker(25);

        // Create a timer that invokes CheckStatus at X:40 or X:10, 
        // and every 30 minutes thereafter.

        var stateTimer = new Timer(statusChecker.CheckStatus,
                                   autoEvent, (waitPeriod * 60 * 1000), (30 * 60 * 1000));
    }
}

class StatusChecker
{
    private int invokeCount;
    private int maxCount;

    public StatusChecker(int count)
    {
        invokeCount = 0;
        maxCount = count;
    }

    // This method is called by the timer delegate.
    public void CheckStatus(Object stateInfo)
    {
        AutoResetEvent autoEvent = (AutoResetEvent)stateInfo;  
        
        // here comes the email checher

        if (invokeCount == maxCount)
        {
            // Reset the counter and signal the waiting thread.
            invokeCount = 0;
            autoEvent.Set();
        }
    }
}
